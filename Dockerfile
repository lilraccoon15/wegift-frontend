# √âtape de build
FROM node:18-alpine as builder

WORKDIR /app

# Build args inject√©s automatiquement par Railway
ARG VITE_BACKEND_URL_AUTH
ARG VITE_API_URL
ARG VITE_BACKEND_URL_WISHLIST
ARG VITE_BACKEND_URL_USER
ARG VITE_BACKEND_URL_EXCHANGE

# üîÅ Injection dans l'environnement pour node (pr√©build)
ENV VITE_BACKEND_URL_AUTH=$VITE_BACKEND_URL_AUTH
ENV VITE_API_URL=$VITE_API_URL
ENV VITE_BACKEND_URL_WISHLIST=$VITE_BACKEND_URL_WISHLIST
ENV VITE_BACKEND_URL_USER=$VITE_BACKEND_URL_USER
ENV VITE_BACKEND_URL_EXCHANGE=$VITE_BACKEND_URL_EXCHANGE

# D√©pendances
COPY package*.json ./
RUN npm install

# Code source
COPY . .

# üå± G√©n√©ration du fichier clientEnv.ts
RUN npm run prebuild

# üèóÔ∏è Build du projet (Vite utilisera les valeurs inject√©es dans clientEnv.ts)
RUN npm run build

# √âtape finale : image nginx minimale pour servir le frontend
FROM nginx:stable-alpine

# Copie des fichiers build√©s dans nginx
COPY --from=builder /app/dist /usr/share/nginx/html

# Configuration nginx personnalis√©e
COPY default.conf /etc/nginx/conf.d/default.conf
